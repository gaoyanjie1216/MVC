<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter， -->
    <!-- 可用在xml配置文件中使用<mvc:annotation-driven>替代注解处理器和适配器的配置。 -->
    <mvc:annotation-driven/>

    <!-- 允许对静态资源文件的访问 -->
    <mvc:default-servlet-handler/>
    <!-- 静态资源处理， css， js， imgs -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- 组件扫描器：可以扫描 @Controller、@Service、@Repository 等等 -->
    <!--<context:component-scan base-package="com.gyj.mvc.controller, com.gyj.mvc.service"/>-->
    <context:component-scan base-package="com.gyj.mvc">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 注册拦截器 -->
    <mvc:interceptors>
        <!-- <mvc:interceptor>
            <mvc:mapping path="/login"/>拦截规则, 指定相应路径的方法会被拦截
            <bean class="com.gyj.mvc.controller.Test1Interceptor"/>
        </mvc:interceptor> -->
        <bean class="com.gyj.mvc.controller.Test1Interceptor"/>
        <bean class="com.gyj.mvc.controller.Test2Interceptor"/>
    </mvc:interceptors>

</beans>